# SPDX-License-Identifier: GPL-2.0-or-later

#
# Freescale Kinetis KE0x and KEAx series devices
#

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
    set _CHIPNAME $CHIPNAME
} else {
    set _CHIPNAME ke
}

# Work-area is a space in RAM used for flash programming
# By default use 1kB
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x400
}

if { [info exists CPUTAPID] } {
    set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x0bc11477
}

swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap

$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME kinetis_ke 0 0 0 0 $_TARGETNAME

adapter speed 1000

reset_config srst_nogate

if {![using_hla]} {

   # It is important that "kinetis_ke mdm check_security" is called for
   # 'examine-end' event and not 'eximine-start'. Calling it in 'examine-start'
   # causes "kinetis_ke mdm check_security" to fail the first time openocd
   # calls it when it tries to connect after the CPU has been power-cycled.
   $_CHIPNAME.cpu configure -event examine-end {
      kinetis_ke mdm check_security
   }

   # if srst is not fitted use SYSRESETREQ to
   # perform a soft reset
   cortex_m reset_config sysresetreq
}
